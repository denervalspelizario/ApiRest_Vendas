
CONFIGURANDO PROJETO
-- criação do projeot yarn init -y
-- instalando dependencias :
comando yarn add typescript ts-node-dev @types/node tsconfig-paths -D   , adcionando typescript ao projeto
comando yarn tsc --init --rootDir src --outDir build --esModuleInterop --resolveJsonModule --lib es6 --module commonjs --allowJs true --noImplicitAny true   , regras do typescript ao projeto

-- para rodar o build  comando yarn tsc   , que gera o arquivo js mas não sera usado até o final do projeto
-- crie no script com esse comando    "dev": "ts-node-dev --inspect --transpile-only --ignore-watch node_modules src/server.ts"  para poder rodar a api para teste com o comando yarn dev
-- criando padronização de codigo crie .editorconfig e ajuste a sua realidade
-- continuando a padronizacao instale  este comando yarn add -D eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin  e depois  crie o .eslint
   depois de criar eslint e adicionara s configs crie o eslitignore e adicione as configs e depois adicione os comandos para executar o eslint em scripts no package.json

-- Adicionar prettier ao projeto para instalar comando yarn add prettier -D  , depois crie o arquivo .prettierrc e adicione as configs básicas
   após as configs basicas instale esses dois pacotes   yarn add eslint-config-prettier@6.15.0 eslint-plugin-prettier@3.2.0 -D e depois ajustar as configs no eslitrc

ESTRUTURA DE PASTAS
  -- pastas base config  modules e share
  -- ajuste em tsconfig  para tire o // de "baseUrl" e facilitar os caminhos usando o script
  "paths": {
    "@config/*": ["src/config/*"],
    "@modules/*": ["src/modules/*"],
    "@shared/*": ["src/shared/*"]
  }


INSTALACOES DE BIBLIOTECAS USADAS NO PROJETO
yarn add express cors express-async-errors
yarn add -D @types/express @types/cors

-- depois de estruturar pastas fazer uma rota basica para testes
-- criar um arquivo de tratagem de error que será na pasta dentro de src chamada error,
   depois em AppError vc criar a classe que recebe a msg e o status do erro,
   em seguinta criar um middleware
